{"version":3,"sources":["components/RightPart.js","components/data/DF.js","components/content-pages/Tecnologies.js","components/content-pages/Resume.js","components/LeftPart.js","App.js","serviceWorker.js","index.js"],"names":["isTecnology","tittle","description","myExperience","imgReference","Tecnologies","makeStyles","theme","root","flexGrow","backgroundColor","padding","paper","spacing","textAlign","color","palette","text","secondary","large","width","height","display","card","maxWidth","media","tecnology","Grid","item","xs","md","useStyles","Resume","classes","Grow","timeout","in","Paper","Typography","variant","align","container","justify","sm","lg","Card","className","RightPart","componentShow","useState","componentBited","setComponentBited","useEffect","DF","LeftPart","handler","setRightPart","componentToShow","Avatar","alt","src","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","Button","onClick","fullWidth","elevation","margin","App","React","setComponentShow","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8898dbe8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport Tecnologies from './content-pages/Tecnologies';\r\nimport DF from './data/DF';\r\nimport Resume from './content-pages/Resume'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:\"#c4c4c4\",\r\n    padding:\"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    \r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    display:'inline-flex',\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  \r\n}));\r\nlet isTecnology \r\nconst RightPart = ({componentShow}) => {\r\n  const [componentBited,setComponentBited]= useState(\"resume\")\r\n\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    switch (componentShow) {\r\n      case 'html5':\r\n        isTecnology = true\r\n        setComponentBited(DF.html5)\r\n        break;\r\n      case 'css3':\r\n        isTecnology = true\r\n        setComponentBited(DF.css3)\r\n        break;\r\n      case 'javascript':\r\n        isTecnology = true\r\n        setComponentBited(DF.html5)\r\n        break;\r\n      case 'react':\r\n        isTecnology = true\r\n        setComponentBited(DF.css3)\r\n        break;\r\n      case 'git':\r\n        isTecnology = true\r\n        setComponentBited(DF.html5)\r\n        break;\r\n      case 'vuejs':\r\n        isTecnology = true\r\n        setComponentBited(DF.css3)\r\n        break;\r\n      case 'nodejs':\r\n        isTecnology = true\r\n        setComponentBited(DF.html5)\r\n        break;\r\n      case 'mongodb':\r\n        isTecnology = true\r\n        setComponentBited(DF.css3)\r\n        break;\r\n      case 'resume':\r\n        isTecnology = false\r\n        setComponentBited('resume')\r\n        break;\r\n      case 'studies':\r\n        isTecnology = false\r\n        setComponentBited('resume')\r\n        break;   \r\n      case 'experience':\r\n        isTecnology = false\r\n        setComponentBited('resume')\r\n        break;    \r\n      case 'contact':\r\n        isTecnology = false\r\n        setComponentBited('resume')\r\n      default:\r\n        break;\r\n    }\r\n  \r\n  });\r\n  \r\n  \r\n  return(\r\n  <Grid item xs={12} md={9}>\r\n    {isTecnology ? <Tecnologies tecnology={componentBited}/> : \"\" }\r\n    {componentBited==\"resume\"   ? <Resume /> : \"\"}\r\n  </Grid>\r\n  );\r\n\r\n}\r\n\r\nexport default RightPart\r\n","const html5={\r\n    tittle:'HTML5',\r\n    description:'HTML 5 es la quinta revisión importante del lenguaje básico de la World Wide Web, HTML. HTML5 especifica dos variantes de sintaxis para HTML: una «clásica», HTML, conocida como HTML5, y una variante XHTML conocida como sintaxis XHTML 5 que deberá servirse con sintaxis XML',\r\n    myExperience:'I work with html and html5 since i start my studies in the university. Today i know already a lot of him functions and i can work pretty well with it',\r\n    imgReference:'https://programacion.net/files/article/20160306020314_html5.jpg'\r\n}\r\nconst css3={\r\n    tittle:'Css3',\r\n    description:'HTML 5 es la quinta revisión importante del lenguaje básico de la World Wide Web, HTML. HTML5 especifica dos variantes de sintaxis para HTML: una «clásica», HTML, conocida como HTML5, y una variante XHTML conocida como sintaxis XHTML 5 que deberá servirse con sintaxis XML',\r\n    myExperience:'I work with html and html5 since i start my studies in the university. Today i know already a lot of him functions and i can work pretty well with it',\r\n    imgReference:'https://programacion.net/files/article/20160306020314_html5.jpg'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default{html5,css3}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DF from '../data/DF.js'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:\"#c4c4c4\",\r\n    padding:\"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    \r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    display:'inline-flex',\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  \r\n}));\r\n\r\nconst Tecnologies = ({tecnology}) => {\r\n\r\n  return(\r\n  <Grid item xs={12} md={9}>\r\n    {tecnology.tittle}\r\n    asdasdasd\r\n  </Grid>\r\n  );\r\n\r\n}\r\n\r\nexport default Tecnologies\r\n","import React from 'react'\r\nimport { Paper, Typography, Card, Box, Grid, Grow, Collapse } from '@material-ui/core'\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nconst Resume = () => {\r\nconst classes=useStyles()\r\n    return (\r\n        <div>\r\n            <Grow timeout={400} in={true}>\r\n            <Paper>\r\n                <Typography variant=\"h4\" align=\"center\">Resume</Typography>\r\n                    <Grid container justify=\"center\" spacing={1}>\r\n                        <Grow timeout={800} in={true}><Grid item xs={12} md={4} sm={12} lg={4}  ><Card className={classes.root}>asdasdasdasd</Card></Grid></Grow>\r\n                        <Grow timeout={800} in={true}><Grid item xs={12} md={4} sm={12} lg={4}  ><Card className={classes.root}>asdasdasdasd</Card></Grid></Grow>\r\n                        <Grow timeout={800} in={true}><Grid item xs={12} md={4} sm={12} lg={4}  ><Card className={classes.root}>asdasdasdasd</Card></Grid></Grow>\r\n                    </Grid>\r\n            </Paper>\r\n        </Grow>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport './LeftPart.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      \r\n    },\r\n    large: {\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(20),\r\n      display:'inline-flex',\r\n    },\r\n\r\n    \r\n  }));\r\n\r\nconst LeftPart = ({handler}) => {\r\n    const classes = useStyles();\r\n    const setRightPart = componentToShow => {\r\n      handler(componentToShow)\r\n    }\r\n    return (\r\n        <Grid item xs={12} md={3}>\r\n          <Paper className={classes.paper}><Avatar alt='me' src=\"https://avatars1.githubusercontent.com/u/49885927?s=460&v=4\" className={classes.large} /><h1>Lautaro Bruno</h1>\r\n          <h4>web developer</h4></Paper>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>About me</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n            <Grid container>   \r\n                <Grid item className='button-spacing' xs={12}><Button onClick={()=>setRightPart('resume')} fullWidth={true} variant=\"outlined\">Resume</Button></Grid>\r\n                <Grid item className='button-spacing' xs={12}><Button onClick={()=>setRightPart('studies')} fullWidth={true} variant=\"outlined\">Studies</Button></Grid>\r\n                <Grid item className='button-spacing' xs={12}><Button onClick={()=>setRightPart('experience')} fullWidth={true} variant=\"outlined\">Laboral Experience</Button></Grid>\r\n                <Grid item className='button-spacing' xs={12}><Button onClick={()=>setRightPart('contact')} fullWidth={true} variant=\"outlined\">Laboral Experience</Button></Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>Technologies</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container justify=\"center\" spacing={1}>   \r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('html5')} elevation={3}><i className=\"devicon-html5-plain colored icon-tecnologies\" ></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('css3')} elevation={3}><i className=\"devicon-css3-plain colored  icon-tecnologies\"></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('javascript')} elevation={3}><i className=\"devicon-javascript-plain colored icon-responsive icon-tecnologies\"></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('react')} elevation={3}><i className=\"devicon-react-plain colored icon-tecnologies\"></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('git')} elevation={3}><i className=\"devicon-git-plain colored icon-tecnologies\"></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('vuejs')} elevation={3}><i className=\"devicon-vuejs-plain colored icon-tecnologies\"></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('nodejs')} elevation={3}><i className=\"devicon-nodejs-plain colored icon-tecnologies\"></i></Paper></Grid>\r\n                <Grid item ><Paper className='icon-tecnologies-paper' onClick={()=>setRightPart('mongodb')} elevation={3}><i className=\"devicon-mongodb-plain colored icon-tecnologies\"></i></Paper></Grid>\r\n              </Grid>  \r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n    )\r\n}\r\nexport default LeftPart\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport RightPart from './components/RightPart.js'\r\nimport LeftPart from './components/LeftPart';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:\"#c4c4c4\",\r\n    padding:\"1%\",\r\n    margin: \"0 auto 35px auto\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    \r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    display:'inline-flex',\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  \r\n}));\r\n\r\n\r\nconst App = () => {\r\n  const [componentShow, setComponentShow] = React.useState()\r\n  const classes = useStyles();\r\n  const componentSet = componentToShow =>{\r\n    setComponentShow(componentToShow)\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <LeftPart handler={componentSet} />\r\n        <RightPart componentShow={componentShow}/>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}